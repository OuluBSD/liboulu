#ifndef _Local_GEnums_h_
#define _Local_GEnums_h_

NAMESPACE_TOPSIDE_BEGIN
namespace GVar {
	

// note: relative to GL_VERTEX_SHADER_BIT etc.
typedef enum {
	SHADERTYPE_NULL = -1,
	
	VERTEX_SHADER,
	FRAGMENT_SHADER,
	GEOMETRY_SHADER,
	TESS_CONTROL_SHADER,
	TESS_EVALUATION_SHADER,
	
	SHADERTYPE_COUNT
} ShaderType;

#define GVAR_SHADERTYPE_LIST \
	GVAR_SHADERTYPE(VERTEX_SHADER) \
	GVAR_SHADERTYPE(FRAGMENT_SHADER) \
	GVAR_SHADERTYPE(GEOMETRY_SHADER) \
	GVAR_SHADERTYPE(TESS_CONTROL_SHADER) \
	GVAR_SHADERTYPE(TESS_EVALUATION_SHADER)

typedef enum : uint32 {
	PROGRAM_SEPARABLE,
} ParamType;

#define GVAR_PARAMTYPE_LIST \
	PARAM_TYPE(PROGRAM_SEPARABLE)
	
typedef enum : uint32 {
	ACTIVE_UNIFORMS,
} ProgParamType;

#define GVAR_PROGPARAMTYPE_LIST \
	PARAM_TYPE(ACTIVE_UNIFORMS)

typedef enum : uint32 {
	COLOR_BUFFER,
	DEPTH_BUFFER,
	STENCIL_BUFFER,
} BufferType;

#define GVAR_BUFFERTYPE_LIST \
	BUFFER_TYPE(COLOR_BUFFER) \
	BUFFER_TYPE(DEPTH_BUFFER) \
	BUFFER_TYPE(STENCIL_BUFFER)

typedef enum {
	FILTER_NEAREST,
	FILTER_LINEAR,
	FILTER_MIPMAP,
	
	DEFAULT_FILTER = FILTER_LINEAR
} Filter;

typedef enum {
	WRAP_CLAMP,
	WRAP_REPEAT,
	
	DEFAULT_WRAP = WRAP_REPEAT
} Wrap;



}
NAMESPACE_TOPSIDE_END

#endif
