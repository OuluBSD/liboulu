machine sdl.app: {
	
	chain program: {
		state event.register;
		
		loop ogl.fbo: {
			ogl.customer: true;
			x11.ogl.fbo.program: true {
				drawmem:		"false";
				program:		"obj_view";
			};
			x11.ogl.fbo.sink: true {
				close_machine:	true;
				sizeable:		true;
				env:			event.register;
				shader.frag.path:		"shaders/tests/07d_fragment.glsl";
				shader.vtx.path:			"shaders/tests/07d_vertex.glsl";
			};
		};
		
	};

};





engine ecs.dummy: {
    system rendering;
    system entity.store;
    system component.store;
    system events;
    system physics: {
        //log: debug;
    };
    
    
    pool world: {
        entity ground: {
            comp transform3;
            comp model: {
                builtin: plane;
            };
            comp physics: {
                bind: physics;
                test.fn: fixed;
            };
        };
        
        entity box1: {
            comp transform3;
            comp body;
            comp model: {
                builtin: box;
            
            };
            comp physics: {
                bind: physics;
                //test.fn: do.circle;
                test.fn: fixed;
            };
        };
        
        entity box2: {
            comp transform3: {
                x: 1;
                z: 3;
            };
            comp body;
            comp model: {
                builtin: box;
            
            };
            comp physics: {
                bind: physics;
                test.fn: fixed;
            };
        };
        
        entity player: {
            comp transform3: {
                x: 0.1;
                y: 2;
                z: 0;
            };
            comp viewable;
            comp viewport: {
                fov: 160;
            };
            comp camera.chase: {
                target: world.box1;
                //log: test;
            };
            comp physics: {
                bind: physics;
                //test.fn: fixed;
                test.fn: do.circle;
            };
        };
    };
    
};
