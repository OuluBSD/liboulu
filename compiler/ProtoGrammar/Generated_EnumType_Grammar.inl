// Generated at 12/21/2020 07:40:50
case NODE_FILE_INPUT: return "FileInput";
case NODE_FILE_LINE_SEQ: return "FileLineSeq";
case NODE_FILE_LINE_SEQ_ITEM: return "FileLineSeqItem";
case NODE_FILE_LINE: return "FileLine";
case NODE_EMPTY_STMT: return "EmptyStmt";
case NODE_KEY_VALUE_STMT: return "KeyValueStmt";
case NODE_CHAR_RULE_STMT: return "CharRuleStmt";
case NODE_CHAR_RULE_BLOCK: return "CharRuleBlock";
case NODE_CHAR_RULE_BLOCK_ITEM: return "CharRuleBlockItem";
case NODE_CHAR_RULE_OP: return "CharRuleOp";
case NODE_CHAR_RULE_ELEMENT: return "CharRuleElement";
case NODE_TOKEN_RULE_STMT: return "TokenRuleStmt";
case NODE_TOKEN_RULE_EXPR: return "TokenRuleExpr";
case NODE_TOKEN_RULE_EXPR_ITEM: return "TokenRuleExprItem";
case NODE_TOKEN_RULE_BLOCK: return "TokenRuleBlock";
case NODE_TOKEN_RULE_BLOCK_ITEM: return "TokenRuleBlockItem";
case NODE_TOKEN_RULE_ELEMENT: return "TokenRuleElement";
case NODE_RULE_EXPR_STMT: return "RuleExprStmt";
case NODE_RULE_EXPR: return "RuleExpr";
case NODE_RULE_EXPR_ITEM: return "RuleExprItem";
case NODE_BLOCK_EXPR: return "BlockExpr";
case NODE_BLOCK_EXPR_ITEM: return "BlockExprItem";
case NODE_ELEMENT_EXPR: return "ElementExpr";
case NODE_PRE_EXPR: return "PreExpr";
case NODE_POST_EXPR: return "PostExpr";
case NODE_ID_SEQ: return "IdSeq";
case NODE_ID_SEQ_ITEM: return "IdSeqItem";
case NODE_ELEMENT_CHAR_RULE: return "ElementCharRule";
case NODE_ELEMENT_TOKEN_RULE: return "ElementTokenRule";
case NODE_CHAR_LIST_ELEMENT: return "CharListElement";
case NODE_CHAR_ELEMENT: return "CharElement";
case NODE_STRING_ELEMENT: return "StringElement";
case NODE_ID_ELEMENT: return "IdElement";
case NODE_CHAR_RULE_ID: return "CharRuleId";
case NODE_TOKEN_RULE_ID: return "TokenRuleId";
case NODE_RULE_ID: return "RuleId";
case NODE_TOKEN_ELEMENT_POST_QUALIFIER: return "TokenElementPostQualifier";
case NODE_ELEMENT_POST_QUALIFIER: return "ElementPostQualifier";
case NODE_ELEMENT: return "Element";
case NODE_EOF: return "Eof";
case NODE_IDENTIFIER: return "Identifier";
case NODE_CHAR_LIST: return "CharList";
case NODE_CHAR_LITERAL: return "CharLiteral";
case NODE_STRING_LITERAL: return "StringLiteral";
case NODE_C_H_A_R: return "CHAR";
case NODE_S_T_R_I_N_G: return "STRING";
case NODE_I_D_E_N_T_I_F_I_E_R: return "IDENTIFIER";
case NODE_C_H_A_R_L_I_S_T: return "CHARLIST";
